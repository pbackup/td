<project name="project-template-symfony1">

    <description>
	Custom Tasks for Symfony 1.x Project.
    </description>

    <property name="project.files.upload" value=""/>
    <property name="project.files.ignore" value="cache/**/* log/**/*"/>
    <property name="project.files.chmod" value=""/>

    <target name="database:reset:local" depends=":properties:build" description="Reset database (local)">
        <symfony1 task="doctrine:drop-db" args="--no-confirmation"/>
        <symfony1 task="doctrine:build-db"/>
        <symfony1 task="doctrine:insert-sql"/>
    </target>

    <target name="database:reset:remote" depends=":properties:build" description="Reset database (remote)">
        <var name="cmd" value="
            cd ${build.path.src};
            php ${build.path.src}/symfony doctrine:drop-db --no-confirmation;
            php ${build.path.src}/symfony doctrine:build-db;
            php ${build.path.src}/symfony doctrine:insert-sql"/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="database:migrate:local" depends=":properties:build" description="Migrate database to the latest version (local)">
        <symfony1 task="doctrine:migrate" args=""/>
    </target>

    <target name="database:migrate:remote" depends=":properties:build" description="Migrate database to the latest version (remote)">
        <var name="cmd" value="
            cd ${build.path.src};
            php ${build.path.src}/symfony doctrine:migrate;"/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="database:fixtures:local" depends=":properties:build" description="Load fixtures to database (local)">
        <symfony1 task="doctrine:data-load" args=""/>
    </target>

    <target name="database:fixtures:remote" depends=":properties:build" description="Load fixtures to database (remote)">
        <var name="cmd" value="
            cd ${build.path.src};
            php ${build.path.src}/symfony doctrine:data-load;"/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="app:clean:local" depends=":properties:build" description="Clean application-source (local)">
        <!-- Delete build and dist directory trees -->
        <delete>
            <fileset dir="${build.path.build}">
                <include name="**/*"/>
            </fileset>
            <fileset dir="${build.path.dist}">
                <include name="**/*"/>
            </fileset>
        </delete>

        <!-- Delete release info -->
        <delete file="${build.path.src}/RELEASE.txt"/>

        <!-- Clear symfony cache -->
        <symfony1 task="cache:clear"/>
        <symfony1 task="cache:clear" args="--env=prod"/>
    </target>

    <target name="app:config:local" depends=":properties:build" description="Configure application">
        <delete dir="${build.path.home/public_html}"/>
        <symlink link="${build.path.home}/public_html"
                 resource="${build.path.src}/web"
                 overwrite="true"
                 failonerror="false"/>

        <replaceregexp file="${build.path.src}/config/databases.yml"
                       match="dsn *:.*"
                       replace="dsn: &quot;mysql:host=${build.database.host};dbname=${build.database.name}&quot;"/>
        <replaceregexp file="${build.path.src}/config/databases.yml"
                       match="username *:.*"
                       replace="username: &quot;${build.database.username}&quot;"/>
        <replaceregexp file="${build.path.src}/config/databases.yml"
                       match="password *:.*"
                       replace="password: &quot;${build.database.password}&quot;"/>

        <replaceregexp file="${build.path.src}/config/factories.yml"
                       match="host *:.*"
                       replace="host: &quot;${build.mail.host}&quot;"/>
        <replaceregexp file="${build.path.src}/config/factories.yml"
                       match="username *:.*"
                       replace="username: &quot;${build.mail.username}&quot;"/>
        <replaceregexp file="${build.path.src}/config/factories.yml"
                       match="password *:.*"
                       replace="password: &quot;${build.mail.password}&quot;"/>

        <!-- Clear symfony cache -->
        <symfony1 task="cache:clear"/>
        <symfony1 task="cache:clear" args="--env=prod"/>
        <symfony1 task="project:permissions"/>

        <!-- File permissions -->
        <chmod perm="a+rwX" type="both">
            <fileset dir="${build.path.src}">
                <include name="${project.files.chmod}"/>
            </fileset>
        </chmod>
    </target>

    <target name="app:config:remote" depends=":properties:build" description="Configure application">
        <var name="cmd" value="
            rm -Rf ${build.path.home}/public_html;
            ln -sfn ${build.path.src}/web ${build.path.home}/public_html;

	    sed -i 's/dsn *:.*/dsn: &quot;mysql:host=${build.database.host};dbname=${build.database.name}&quot;/' ${build.path.src}/config/databases.yml;
            sed -i 's/username *:.*/username: \&quot;${build.database.username}\&quot;/' ${build.path.src}config/databases.yml;
            sed -i 's/password *:.*/password: \&quot;${build.database.password}\&quot;/' ${build.path.src}/config/databases.yml;
            
            sed -i 's/host *:.*/host: \&quot;${build.mail.host}\&quot;/' ${build.path.src}config/factories.yml;
            sed -i 's/username *:.*/username: \&quot;${build.mail.username}\&quot;/' ${build.path.src}/config/factories.yml;
            sed -i 's/password *:.*/password: \&quot;${build.mail.password}\&quot;/' ${build.path.src}/config/factories.yml;

            cd ${build.path.src};
	    php ${build.path.src}/symfony cache:clear;
            php ${build.path.src}/symfony cache:clear --env=prod;
            php ${build.path.src}/symfony project:permissions;

	    if [ -n '${project.files.chmod}' ]; then cd ${build.path.src}; chmod -Rf a+rwX ${project.files.chmod}; fi;"/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="app:config2:local" depends=":properties:build" description="Configure application 2">
    </target>

    <target name="app:config2:remote" depends=":properties:build" description="Configure application 3">
    </target>

    <target name="app:config3:local" depends=":properties:build" description="Configure application 3">
    </target>

    <target name="app:config3:remote" depends=":properties:build" description="Configure application 3">
    </target>

</project>
