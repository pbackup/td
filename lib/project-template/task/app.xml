<project name="project-template-tasks-app">

    <description>
        Application Tasks for Project Template.
    </description>

    <target name="app:reset" depends=":properties:build" description="Reset application-source">
        <antcall inheritAll="false" target="app:reset:${build.type}"/>
    </target>

    <target name="app:reset:local" depends=":properties:build" description="Reset application-source (local)">
        <!-- Delete src directory trees -->
        <chmod perm="u+rwX" type="both">
            <fileset dir="${build.path.src}">
                <include name="**/*"/>
            </fileset>
        </chmod>
        <delete>
            <fileset dir="${build.path.src}">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>

    <target name="app:reset:remote" depends=":properties:build" description="Reset application-source (remote)">
        <var name="cmd" value="
	        chmod -R u+rwX ${build.path.src};
            rm -Rf ${build.path.src}/*;
        "/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="app:clean" depends=":properties:build" description="Clean application-source">
        <antcall inheritAll="false" target="app:clean:${build.type}"/>
    </target>

    <target name="app:clean:local" depends=":properties:build" description="Clean application-source (local)">
        <!-- Delete build and dist directory trees -->
        <delete>
            <fileset dir="${build.path.build}">
                <include name="**/*"/>
            </fileset>
            <fileset dir="${build.path.dist}">
                <include name="**/*"/>
            </fileset>
        </delete>

        <!-- Delete release info -->
        <delete file="${build.path.src}/RELEASE.txt"/>

        <echo>WARNING: Need custom/framework task for app:clean:local</echo>
    </target>

    <target name="app:release" depends=":properties:build" description="Generate application release info">
        <antcall inheritAll="false" target="app:release:${build.type}"/>
    </target>

    <target name="app:release:local" depends=":properties:build"
            description="Generate application release info (local)">
        <echo>Generating release info: ${build.path.src}/RELEASE.txt</echo>
        <echo file="${build.path.src}/RELEASE.txt">
            BUILD INFO
            ==========
            Project Name: ${project.name}
            Project Version: ${project.version}
            Build Job: ${env.JOB_NAME}
            Build Date: ${now}
            Build Id: ${env.BUILD_ID}
            Build Num: ${env.BUILD_NUMBER}
            SVN Path: ${env.SVN_PATH}
            SVN Revision: ${env.SVN_REVISION}
        </echo>
    </target>

    <target name="app:pack" depends=":properties:build" description="Pack application-source">
        <antcall inheritAll="false" target="app:pack:${build.type}"/>
    </target>

    <target name="app:pack:local" depends="app:release:local" description="Pack application-source (local)">
        <delete file="${build.path.dist}/${package.app}" quiet="true"/>
        <mkdir dir="${build.path.dist}"/>
        <zip destfile="${build.path.dist}/${package.app}" update="false">
            <fileset dir="${build.path.src}">
                <include name="**/*"/>
                <!-- Leave out uploaded-files -->
                <exclude name="${project.files.upload}"/>
                <exclude name="${project.files.ignore}"/>
                <!-- Leave out SVN and GIT info -->
                <exclude name=".svn*/*"/>
                <exclude name=".git*/*"/>
            </fileset>
        </zip>
    </target>

    <target name="app:pack:remote" depends=":properties:build" description="Pack application-source (remote)">
        <var name="cmd" value="
            rm -f ${build.path.dist}/${package.app};
            mkdir -p ${build.path.dist};
            cd ${build.path.src}; zip -r ${build.path.dist}/${package.app} . -x '${project.files.upload} ${project.files.ignore} .svn*/* .git*/*';
        "/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="app:unpack" depends=":properties:build" description="Unpack application-source">
        <antcall inheritAll="false" target="app:unpack:${build.type}"/>
    </target>

    <target name="app:unpack:local" depends=":properties:build" description="Unpack application-source (local)">
        <mkdir dir="${build.path.src}"/>
        <chmod perm="u+rwX" type="both">
            <fileset dir="${build.path.src}">
                <include name="**/*"/>
            </fileset>
        </chmod>
        <unzip src="${build.path.dist}/${package.app}" dest="${build.path.src}"/>
    </target>

    <target name="app:unpack:remote" depends=":properties:build" description="Unpack application-source (remote)">
        <var name="cmd" value="
            mkdir -p ${build.path.src};
            sudo -n /root/reset-cushyerp-ownership.sh
            chmod -R u+rwX ${build.path.src};
            unzip -q -o ${build.path.dist}/${package.app} -d ${build.path.src};
        "/>
        <ssh-cmd command="${cmd}"/>
    </target>

    <target name="app:config" depends=":properties:build" description="Configure application">
        <antcall inheritAll="false" target="app:config:${build.type}"/>
    </target>

    <target name="app:config:local" depends=":properties:build" description="Configure application">
        <!-- File permissions -->
        <chmod perm="a+rwX" type="both">
            <fileset dir="${build.path.src}">
                <include name="${project.files.chmod}"/>
            </fileset>
        </chmod>

        <echo>WARNING: Need custom/framework task for app:config:local</echo>
    </target>

    <target name="app:config:remote" depends=":properties:build" description="Configure application">
        <echo>WARNING: Need custom/framework task for app:config:remote</echo>
    </target>

    <target name="app:config2" depends=":properties:build" description="Configure application 2">
        <antcall inheritAll="false" target="app:config2:${build.type}"/>
    </target>

    <target name="app:config2:local" depends=":properties:build" description="Configure application 2">
        <echo>WARNING: Need custom/framework task for app:config2:local</echo>
    </target>

    <target name="app:config2:remote" depends=":properties:build" description="Configure application 2">
        <echo>WARNING: Need custom/framework task for app:config2:remote</echo>
    </target>

    <target name="app:config3" depends=":properties:build" description="Configure application 3">
        <antcall inheritAll="false" target="app:config3:${build.type}"/>
    </target>

    <target name="app:config3:local" depends=":properties:build" description="Configure application 3">
        <echo>WARNING: Need custom/framework task for app:config3:local</echo>
    </target>

    <target name="app:config3:remote" depends=":properties:build" description="Configure application 3">
        <echo>WARNING: Need custom/framework task for app:config3:remote</echo>
    </target>

</project>
